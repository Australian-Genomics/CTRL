<div id="main_content_wrapper">
  <div id="main_content">
      <h2>Creating a Survey Step</h2>
      <p>To create a survey step, start by clicking the "Consent Steps" link from the navigation bar.</p>

      <%= image_tag 'admin/documentation/1' %>

      <p>From there, click the "New Consent Step" button located from the top right of the screen</p>

      <%= image_tag 'admin/documentation/2' %>

      <p> You can also edit an existing consent step by hitting the "edit" link </p>

      <%= image_tag 'admin/documentation/7' %>

      <p>Here are the following fields you will see on the form and their descriptions:</p>

      <ul>
        <li><b>order</b> - The position of the Step relative to the rest when displayed from the customer facing side. EG: if the order is set to "2" then it will be the second step after step "1". It is important to note that the order should be unique and non-negative.
        </li>
        <li><b>title</b> - name or title of the consent step.</li>
        <li><b>description</b> - written representation of the consent step.</li>
        <li><b>popover</b> - text displayed when the cursor hovers over the information icon in the customer dashboard.</li>
      </ul>

      <h2>What is a Consent Group?</h2>
      <p>A consent group is responsible for holding or categorizing a set of questions in a Consent Step. To add a consent group click the "add group" button and a new form should appear with the following fields:</p>

      <ul>
        <li><b>header</b> - name or short description of the group (which will be shown to the customer). This field could also be left blank.</li>
        <li><b>order</b> - The position of the consent group.</li>
      </ul>

      <p> Here's an example of what it would look like from the customer side if there are two consent groups. The first consent group's header is "Who can have access to my de-identified samples and information?" and the second group's heading is "What kinds of research can they do with my de-identified samples and information?"</p>

      <%= image_tag 'admin/documentation/8' %>

      <p>It is also fine to leave the header field blank</p>

      <h2>Adding Questions to a Consent Group</h2>

      <p>Click the "Add Question" button that appears after adding a consent group. A question form will have the following fields:</p>

      <ul>
        <li><b>Order</b> - The position of the question relative to the rest of the questions when displayed to the customer. The number should be non negative and unique to all the questions currently in the consent group.</li>
        <li><b>Question</b> - Survey question for the customer.</li>
        <li><b>Description</b> - Written representation of the question shown to the customer when the user clicks the information icon. The input accepts html so you can bold letters, italicize, write a list etc.</li>
        <li><b>Question type</b> -
          There are currently three types available.
          <ul>
            <li>checkbox - A small box on the form into which a check or other mark is entered as the response to a question.</li>
            <li>multiple choice - Several possible answers from which the customer must try to choose one. If this is selected, then you can define the options by clicking the "add multiple choice option" button.</li>
            <li>checkbox agreement - A checkbox type of question that urges for an agreement. EG: I understand all of the information above and the choices I have made.
            </li>
          </ul>
        </li>
        <li><b>Default answer</b> - The preselected answer for a question. If the question type is "checkbox" then "yes" stands for checked while "no" stands for unchecked (should not be capitalized). If the question type is "multiple choice" then the default value should be the same as the multiple choice value that is intended to be the default answer (case sensitive).
        </li>
        <li><b>Answer choices position</b> - Answer positioning only applies for the "multiple choice" question type. There are two choices: "right" and "bottom". The second choice "bottom" is useful if one of the question option values are long.
        </li>
        <li><b>Redcap field</b> - The REDCap variable which this question will be kept synchronised with, if such a REDCap variable exists. If not, this field can safely be left blank.</li>
      </ul>

      <h2>Adding a Modal fallback (optional)</h2>

      <p>After clicking the "Next Step" button. A modal is shown to the customer if a customer doesn't check a question with the type "checkbox agreement". The front end is programmed to only detect the first instance of a question with type "checkbox agreement". Eg: If there are two question "checkbox agreement" types then only the first instance is observed. You can add a modal fallback by clicking the Add Modal Fallback button. Note that there should be atleast one question with type "checkbox agreement" for the modal to observe. The modal fallback is normally used after the user doesn't agree to the consent and that a genetic counselor will soon come in contact.
      </p>

      <ul>
        <li><b>description</b> - main text inside the modal displayed to the costumer after clicking the next button. The input accepts html so you can bold letters, italicize, add h1/h2/h3 tags etc.
        </li>
        <li><b>review_answers_btn</b> - text for the review answers button.</li>
        <li><b>cancel_btn</b>- text for the cancel button. By default this leads to the genetic coun,</li>
        <li><b>small_note</b> - short block of text shown below the "review answers" and "cancel" buttons.</li>
      </ul>

      <%= image_tag 'admin/documentation/9' %>

      <h2>Deleting a Component</h2>

      <p>You can delete an existing Consent Group or specific Consent Questions by checking the "delete" checkbox and hitting the "update consent step" button. Note that deleting a consent group will delete all attached questions. When a question is deleted, its customer responses/answers are also deleted so be careful.</p>



      <h2>Conditional DUO Limitations</h2>
      <p>
        <a href="https://www.ga4gh.org/genomic-data-toolkit/data-use-ontology-duo/">DUO (Data Use Ontology)</a> codes define restrictions on how a particular participant's data can be used. CTRL supports conditionally annotating a participant's data with DUO codes, based on that participant's responses to consent questions. In CTRL, these annotations are referred to as "Conditional DUO Limitations".
      </p>

      <h3>Adding a Conditional DUO Limitation</h3>
      <p>
        Conditional DUO Limitations can be added <a href="/admin/conditional_duo_limitations">here</a>. Upon clicking the "New Conditional Duo Limitation" button, you'll be taken <a href="/admin/conditional_duo_limitations/new">here</a>, where you can add a JSON document specifying the DUO limitation and conditions it must satisfy in order to annotate a participant's data.
      </p>

      <p>
      As an example, let's say we want to annotate the data of any participant who answers "yes" to the question having the ID <code>1</code>. Specifically, we want to annotate it with the DUO code <code>DUO:0000004</code>. We can express this limitation in CTRL's JSON format by writing:
      </p>

      <pre><code>{
  "duoLimitation": {
    "code": "DUO:0000004",
    "modifiers": []
  },
  "condition": {
    "consent_question_id": 1,
    "answer": "yes"
  }
}</code></pre>

      <p>
      Notice that the JSON document has two parts: one is the <code>"duoLimitation"</code> and the other is the <code>"condition"</code>:
      </p>

      <ul>
        <li>
          The <code>"duoLimitation"</code> follows a schema defined <a href="https://github.com/umccr/elsa-data/blob/420350e70458ba0c022db188362c2d2100ae62e5/application/common/elsa-types/schemas-duo.ts#L215">here</a>. Any JSON which is valid within that schema is also a valid <code>"duoLimitation"</code>. The meanings of the DUO codes allowed by the schema are defined by <a href="https://www.ga4gh.org/">GA4GH</a> and are available <a href="https://raw.githubusercontent.com/EBISPOT/DUO/master/duo.owl">here</a>.
        </li>
        <li>The <code>"condition"</code> is evaluated for each participant. In the above example, any participant who answered "yes" to the question whose ID is <code>1</code> will have their data annotated with the DUO code <code>DUO:0000004</code>. (Questions' IDs can be found in Active Admin, <a href="/admin/consent_questions">here</a>.) Note that the condition will always be false for a particular participant if they haven't answered all the questions which the condition depends on.
        </li>
      </ul>

      <p>
      Although the condition in the above example is simple, more complex conditions can be expressed. CTRL's JSON format allows the condition to be predicated on more than one question. For example, if we want the annotation to happen only for users who answered "yes" on question <code>1</code> and "no" on <code>2</code>, we would write:
      </p>

      <pre><code>{
  "duoLimitation": {
    "code": "DUO:0000004",
    "modifiers": []
  },
  "condition": {
    "and": [
      {
        "consent_question_id": 1,
        "answer": "yes"
      },
      {
        "consent_question_id": 2,
        "answer": "no"
      }
    ]
  }
}</code></pre>

      <p>
       A logical <code>or</code> operator also exists, which follows the same syntax as the <code>and</code> operator in the example above. There's also a <code>not</code> operator, which can be used as in the following example:
      </p>

      <pre><code>{
  "duoLimitation": {
    "code": "DUO:0000004",
    "modifiers": []
  },
  "condition": {
    "and": [
      {
        "not": {
          "consent_question_id": 1,
          "answer": "yes"
        }
      },
      {
        "consent_question_id": 2,
        "answer": "no"
      }
    ]
  }
}</code></pre>

      <p>
      Multiple conditional DUO limitations can be defined. This means that a participant might satisfy the conditions for many DUO limitations. CTRL will merge the <code>"duoLimitation"</code> sections when returning the codes, if it makes sense to do so. See <a href="#fetching-duo-codes-for-a-user">Fetching DUO Codes for a User</a> for details on how this works.
      </p>

      <h3 id="fetching-duo-codes-for-a-user">Fetching DUO Codes for a User</h3>
      <p>
        We can fetch the DUO codes whose condition is satisfied by a particular user. To do so, we can use a REST API built into CTRL. Using the REST API requires creating an API User <a href="/admin/api_users">here</a>. When you do so, you'll be asked for a name. The name is arbitrary and is used as a human-readable way to differentiate between tokens. Upon entering a name and clicking the "Create Api User" button, you'll be redirected to a page displaying your new API token:
      </p>

      <%= image_tag 'admin/documentation/20' %>

      <p>
        The token can then be used to send a HTTP POST request to CTRL. The POST payload should be a JSON array of study IDs whose DUO codes you would like. For example:
      </p>

      <pre><code>$ curl \
  <%= request.base_url %>/api/v1/duo_limitations \
  -s \
  -X POST \
  -H "Authorization: Bearer 26f854124dd05b76bab3aa5def63364f510562e6ff49df9bbe24a0868006c45fb56c4e24caefbd7f" \
  -d '
     [
       "non-existent-study-id",
       "A1543457"
     ]' \
  | jq</code></pre>

      <p>Might produce the response:</p>

      <pre><code>{
  "A1543457": [
    {
      "code": "DUO:0000007",
      "diseaseSystem": "http://purl.obolibrary.org/obo/mondo.owl",
      "diseaseCode": "MONDO:0037940",
      "modifiers": [
        {
          "code": "DUO:0000022",
          "regions": [
            "US"
          ]
        }
      ]
    }
  ]
}</code></pre>

      <p>Each study ID's array elements follow the schema defined <a href="https://github.com/umccr/elsa-data/blob/420350e70458ba0c022db188362c2d2100ae62e5/application/common/elsa-types/schemas-duo.ts#L215">here</a>.</p>

      <p>
      Note that multiple conditional DUO limitations can be defined. This means that a participant might satisfy the conditions for many DUO limitations. They will be combined if possible. For example, assume a user satisfies the conditions for these <code>"duoLimitation"</code>s:
      </p>

      <ol>
        <li>
      <pre><code>{
  "code": "DUO:1",
  "modifiers": [
    { "code": "DUO:2", "regions": ["US"] },
    { "code": "DUO:3", "regions": ["US"] }
  ]
}</code></pre>
        </li>

        <li>
      <pre><code>{
  "code": "DUO:1",
  "modifiers": [
    { "code": "DUO:2", "regions": ["AU"] },
    { "code": "DUO:4", "regions": ["NZ"] }
  ]
}</code></pre>
        </li>

        <li>
      <pre><code>{
  "code": "DUO:11",
  "modifiers": []
}</code></pre>
        </li>
      </ol>

      <p>
      Despite three conditions being satisfied, the server will respond with a list of two entries, because the first two are combined:
      </p>

      <pre><code>{
  "A2183475": [
    {
      "code": "DUO:1",
      "modifiers": [
        { "code": "DUO:2", "regions": [ "US", "AU" ] },
        { "code": "DUO:3", "regions": [ "US" ] },
        { "code": "DUO:4", "regions": [ "NZ" ] }
      ]
    },
    {
      "code": "DUO:11",
      "modifiers": []
    }
  ]
}</code></pre>


      <h3>Gotchas When Using Conditional DUO Limitations</h3>
      Conditional DUO Limitations are automatically deleted when any of the consent questions they refer to are deleted.

      <h2 id="adding-a-glossary-entry">Adding a Glossary Entry</h2>

      <p>Start by clicking the "Glossary Entries" link from the navigation bar.</p>

      <%= image_tag 'admin/documentation/10' %>

      <p>From there, click the "New Glossary Entry" button located from the top right of the screen.</p>

      <%= image_tag 'admin/documentation/11' %>

      <p>Glossary entries you create will appear on the <a href="/glossary" target="_blank">glossary page</a>, as shown below.</p>

      <%= image_tag 'admin/documentation/12' %>

      <h2>Linking to a Glossary Entry</h2>

      <p>
        The first step is to add your glossary entries in the admin portal,
        as described in the "<a href="#adding-a-glossary-entry">Adding a
        Glossary Entry</a>" section. Once you do that, you'll see the newly
        added glossary entries on the
        <a href="/glossary" target="_blank">glossary page</a>. To
        reference them in a consent question, use the following code template:
      </p>

      <pre><code>&lt;a href="glossary#term-id" target="_blank"&gt;human-readable-term&lt;/a&gt;</pre></code>

      <p>
        When using the template in a question, <code>term-id</code> and
        <code>human-readable-term</code> should be replaced.
      </p>

      <p>
        There's two ways to figure out the <code>term-id</code> of a term:
      </p>

      <ol>
        <li>
          Mentally, by taking the term you added via the admin portal,
          replacing all non-alphanumeric characters with dashes, then changing
          all the characters to lower case. e.g. the term "My 3rd Term" would
          have the ID <code>my-3rd-term</code>.
        </li>
        <li>
          By copying the link from the
          <a href="/glossary" target="_blank">glossary page</a>. Each term has a pilcrow
          (¶) before it with a hyperlink to the term. In your web browser, you
          can right click on that hyperlink then click "Copy Link Address",
          "Copy Link", or some other variant of that depending on the browser
          you're using. Using this method will not only copy the term ID, but
          the entire link in absolute form. So you'll get something like
          <code><%= request.base_url %>/glossary#my-3rd-term</code> in your
          clipboard instead of just the term's ID (e.g.
          <code>my-3rd-term</code>).
        </li>
      </ol>

      <p>
        To figure out the <code>human-readable-term</code>, ask yourself what
        text you'd like the survey particpant to see. For example if you'd like  is
        what the survey participant sees. So you might replace that with, for
        example, "Human Readable Term".
      </p>

      <p>
        To make this concrete, let's go through an example of linking to a
        glossary entry. Imagine that we had the following entry in the glossary:
      </p>

      <%= image_tag 'admin/documentation/13' %>

      <p>
        Then on the <a href="/glossary" target="_blank">glossary page</a>, we'll
        see it appear as follows:
      </p>

      <%= image_tag 'admin/documentation/14' %>

      <p>
        Right-clicking the pilcrow will copy
        <code><%= request.base_url %>/glossary#genetic-test</code> to the
        clipboard:
      </p>

      <%= image_tag 'admin/documentation/15' %>

      <p>
        The <code>genetic-test</code> part of the URL is the term's ID. Now,
        we'll use the ID in a consent question. Let's say that in the following
        consent step, we wanted to link "genetic testing" to our "genetic test"
        glossary entry:
      </p>

      <%= image_tag 'admin/documentation/16' %>

      <p>
        To do that, we'd replace all the instances of "genetic testing" with
        this:
      </p>

      <pre><code>&lt;a href="glossary#genetic-test" target="_blank"&gt;genetic testing&lt;/a&gt;</pre></code>

      <p>
        In the administrator portal, we'll get the following:
      </p>

      <%= image_tag 'admin/documentation/17' %>

      <p>
        Now, within the survey which the user will see, "genetic testing" should
        be blue and link to the term in the glossary:
      </p>

      <%= image_tag 'admin/documentation/18' %>

      <h2>Embedding YouTube Videos within Questions and Descriptions</h2>

      <p>
        Follow <a href="https://support.google.com/youtube/answer/171780?hl=en" target="_blank">
        Google's guide on embedding YouTube videos</a> to acquire the HTML code
        to do so. Via the admin portal, the HTML code can than be pasted into
        the questions or descriptions where you'd like the video to appear, as
        shown below:
      </p>

      <%= image_tag 'admin/documentation/19' %>

      <p>
        Note that the uploader of the YouTube video can remove or even edit the
        embeded video. Only embed YouTube videos whose source you trust. It is
        often preferable to embed videos from a channel you own.
      </p>

      <hr>
      <h2>How to View a Customer's Answers to The Survey Questions</h2>
      <p>You can view customer responses by clicking the "Question Answers" button from the navigation bar</p>
      <%= image_tag 'admin/documentation/3' %>

      <p>You will be greeted by a list of all customer responses</p>
      <%= image_tag 'admin/documentation/4' %>
      <br>
      <p>To filter by specific customer, first get the user id (which could be found by clicking the "Users" link from the navigation bar) and pasting that id to the Question Answers filter.</p>

      <%= image_tag 'admin/documentation/5' %>

      <p>Hit the "filter" button to see responses for that specific customer</p>

      <%= image_tag 'admin/documentation/6' %>

      <h2>Other notes</h2>

      <ul>
        <li>
          Note to the client: The front-end has hard coded variables depending
          on Step 1 "CTRL introduction" so it's important not to change or edit
          its "order" field.
        </li>
        <li>
          Fields in the admin portal to edit question text, question
          descriptions, and step descriptions accept HTML code. In HTML, some
          characters, such as angle brackets, have special meaning. Because of
          this, writing a literal angle bracket in the admin portal will not
          show an angle bracket to the user taking the survey and may even break
          the survey. To display special characters to survey users, opening
          angle brackets (<code>&lt;</code>) and closing angle
          (<code>&gt;</code>) brackets, for example, must be written as
          <code>&amp;lt;</code> and <code>&amp;gt;</code>, respectively.
          Ampersands (<code>&amp;</code>) must also be written as
          <code>&amp;amp;</code>.
        </li>
      </ul>
  </div>
</div>

