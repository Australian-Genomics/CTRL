name: docker-build
on:
  workflow_run:
    workflows: ["tests"]
    branches: [main, feature/deployment]
    types: 
      - completed

jobs:
  tests:
    uses: ./.github/workflows/pipeline.yml
  docker-test-and-build:
    needs: [tests]
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set SHA env var (PR)  
        if: ${{ github.event_name == 'pull_request' }}  
        shell: bash  
        run: |  
          echo "LAST_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> ${GITHUB_ENV}  

      - name: Set SHA env var (Push)  
        if: ${{ github.event_name == 'push' }}  
        shell: bash  
        run: |  
          echo "LAST_COMMIT_SHA=${GITHUB_SHA}" >> ${GITHUB_ENV}

      - name: authenticate to google cloud
        id: "auth"
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: 'true'
          service_account: 'gcp-github-access@${{secrets.PROJECT_ID}}.iam.gserviceaccount.com'
          workload_identity_provider: 'projects/${{secrets.PROJECT_NUMBER}}/locations/global/workloadIdentityPools/ctrl-gh-identity-pool/providers/ctrl-gh-provider'

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: latest

      - name: Test if docker image already pushed
        id: test-docker
        run: echo "IMAGE_EXISTS=$(gcloud artifacts files list --location=${{secrets.LOCATION}} --project=${{secrets.PROJECT_ID}} --repository=${{secrets.REGISTRY_NAME}}--package=ctrl --tag=${{env.LAST_COMMIT_SHA}} &>/dev/null && echo 'TRUE' || echo 'FALSE')" >> $GITHUB_OUTPUT

      - name: Docker auth
        run: gcloud auth configure-docker ${{secrets.LOCATION}}-docker.pkg.dev

      - name: Set up Docker Buildx
        if: ${{steps.test-docker.outputs.IMAGE_EXISTS == 'FALSE' }}
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        if: ${{steps.test-docker.outputs.IMAGE_EXISTS == 'FALSE' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{secrets.LOCATION}}-docker.pkg.dev/${{secrets.PROJECT_ID}}/${{secrets.REGISTRY_NAME}}/ctrl:${{env.LAST_COMMIT_SHA}} , ${{secrets.LOCATION}}-docker.pkg.dev/${{secrets.PROJECT_ID}}/${{secrets.REGISTRY_NAME}}/ctrl:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
