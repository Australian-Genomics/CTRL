on:
  push:
  pull_request:

jobs:
  run-rspec:
    name: "rspec"
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: docker compose build
      - env:
          MASTER_KEY: ${{ secrets.MASTER_KEY }}
        run: printf "${MASTER_KEY}" > config/master.key
      - run: docker compose --profile test --env-file=.env.test run web yarn install
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rails db:create
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rails db:migrate
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rails db:reset
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rspec
  run-cucumber:
    name: "cucumber"
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: docker compose build
      - env:
          MASTER_KEY: ${{ secrets.MASTER_KEY }}
        run: printf "${MASTER_KEY}" > config/master.key
      - run: docker compose --profile test --env-file=.env.test run web yarn install
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rails db:create
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rails db:migrate
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rails db:reset
      - run: |
          docker compose --profile test --env-file=.env.test up -d

          # Wait until the selenium container is ready
          while ! curl -s http://localhost:4444/wd/hub/status | grep -qF '"ready": true'
          do
            echo selenium not ready, retrying in 5 seconds...
            sleep 5
          done

          docker compose --profile test --env-file=.env.test run web bundle exec rake cucumber
  check-db-schema-up-to-date:
    name: "check-db-schema-up-to-date"
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: docker compose build
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rails db:create
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rails db:migrate
      - run: |
          if [ -z "$(git status -s -- db/schema.rb)" ]
          then
            echo 'db/schema.rb is up-to-date!'
            true
          else
            echo 'db/schema.rb is out of date! Please run `rails db:migrate`' \
              'and commit the changes to db/schema.rb'
            false
          fi
  run-rubocop:
    name: "run-rubocop"
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: docker compose build
      - run: docker compose --profile test --env-file=.env.test run web bundle exec rubocop
  run-playwright:
    name: "playwright"
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: docker compose build
      - env:
          MASTER_KEY: ${{ secrets.MASTER_KEY }}
        run: printf "${MASTER_KEY}" > config/master.key
      - run: docker compose --profile test --env-file=.env.playwright run web yarn install
      - run: docker compose --profile test --env-file=.env.playwright run web bundle exec rails db:create
      - run: docker compose --profile test --env-file=.env.playwright run web bundle exec rails db:migrate
      - run: docker compose --profile test --env-file=.env.playwright run web bundle exec rails db:reset
      - run: |
          docker compose --profile test --env-file=.env.playwright up -d

          # Wait until the web server is ready
          while ! curl -s http://localhost:3000 >/dev/null
          do
            echo web server not ready, retrying in 5 seconds...
            sleep 5
          done

          docker compose --profile test --env-file=.env.playwright run playwright npx playwright test --trace on
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: test-results/
          retention-days: 30
